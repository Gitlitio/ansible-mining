- assert:
    that: ccminer_state == 'present'
- assert:
    that: ansible_distribution == 'Ubuntu'
- assert:
    that: ansible_service_mgr == 'systemd'


- name: create/delete ccminer directories
  become: yes
  file:
    dest: "{{ item }}"
    state: "{{ 'directory' if ccminer_state == 'present' else 'absent' }}"
    mode: 0700
  with_items:
    - "{{ ccminer_install_dir }}"
    - "{{ ccminer_config_dir }}"

#- name: install ccminer dependencies
#  apt: name={{ item }} state=present
#  with_items: "{{ ccminer_apt_dependencies }}"
#
#- name: download ccminer src
#  git:
#    repo: "{{ ccminer_git_clone_url }}"
#    dest: "{{ ccminer_install_dir }}"
#    version: "{{ ccminer_git_commit_hash }}"
#  register: ccminer_clone_result
#
#- name: delete ccminer if necessary for rebuild
#  file:
#    path: "{{ ccminer_install_dir }}/ccminer"
#    state: absent
#  when: ccminer_clone_result.changed
#
#- name: delete incompatible nvcc arch flags
#  lineinfile:
#    path: "{{ ccminer_install_dir }}/Makefile.am"
#    regexp: '^nvcc_ARCH.*$'
#    state: absent
#
#- name: delete incompatible nvcc arch flags
#  lineinfile:
#    path: "{{ ccminer_install_dir }}/Makefile.am"
#    regexp: '^nvcc_ARCH.*$'
#    state: absent
#
#- name: set nvcc arch flags
#  lineinfile:
#    path: "{{ ccminer_install_dir }}/Makefile.am"
#    line: "{{ ccminer_apt_dependencies[ccminer_nvcc_arch] }}"
#    insertbefore: '^nvcc_FLAGS.*$'
#    regexp: '^nvcc_ARCH.*$'
#
#- name: build ccminer
#  command: ./build.sh
#  args:
#    chdir: "{{ ccminer_install_dir }}"
#    creates: "{{ ccminer_install_dir }}/ccminer"

- name: create ccminer {{ ccminer_coin }} config
  template:
    src: ccminer.json.jinja2
    dest: "{{ ccminer_config_dir }}/{{ ccminer_coin }}.json"
    owner: root
    group: root
    mode: 0600
  notify: restart {{ ccminer_service }}-{{ ccminer_coin }}

- name: create {{ ccminer_service }}-{{ ccminer_coin }} service
  template:
    src: ccminer.service.jinja2
    dest: /etc/systemd/system/{{ ccminer_service }}-{{ ccminer_coin }}.service
    owner: root
    group: root
    mode: 0644
  notify: restart {{ ccminer_service }}-{{ ccminer_coin }}

- name: enable {{ ccminer_service }}-{{ ccminer_coin }} service
  systemd:
    name: "{{ ccminer_service }}-{{ ccminer_coin }}"
    enabled: yes
    daemon_reload: yes

- meta: flush_handlers

- name: start {{ ccminer_service }}-{{ ccminer_coin }} service
  systemd:
    name: "{{ ccminer_service }}-{{ ccminer_coin }}"
    state: started
